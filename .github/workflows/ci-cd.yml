# name: CI/CD for Next.js

# on:
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: "18"

#       - name: Install dependencies
#         run: yarn install

#       # - name: Run tests
#       #   run: yarn test
#       # ..
#       - name: Build project
#         run: yarn build

#       - name: Deploy to Vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           vercel-args: "--prod --confirm"
#           working-directory: ./
#           github-token: ${{ secrets.GITHUB_TOKEN }}
# name: GitHub Actions Vercel Preview Deployment
# env:
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
# on:
#   # push:
#   #   branches-ignore:
#   #     - main
#   pull_request_target:
#     branches:
#       - main

# jobs:
#   Check-Merge-Conflicts:
#     runs-on: ubuntu-latest
#     outputs:
#       has-conflicts: ${{ steps.conflict-check.outputs.has-conflicts }}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v3

#       - name: Check for merge conflicts
#         id: conflict-check
#         uses: actions/github-script@v6
#         with:
#           script: |
#             const pullRequest = context.payload.pull_request;

#             if (pullRequest.mergeable === false) {
#               return { hasConflicts: 'true' };
#             } else {
#               return { hasConflicts: 'false' };
#             }

#   Deploy-Preview:
#     runs-on: ubuntu-latest
#     needs: Check-Merge-Conflicts
#     if: needs.Check-Merge-Conflicts.outputs.has-conflicts == 'false'
#     steps:
#       - uses: actions/checkout@v3
#       - name: Install Vercel CLI
#         run: npm install --global vercel@canary
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Build Project Artifacts
#         run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Deploy Project Artifacts to Vercel
#         run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
name: GitHub Actions Vercel Preview Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - main

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NEXT_PUBLIC_NAVER_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_NAVER_CLIENT_ID }}
          NEXT_PUBLIC_NAVER_CLIENT_SECRET: ${{ secrets.NEXT_PUBLIC_NAVER_CLIENT_SECRET }}
          NEXT_PUBLIC_NAVER_CLIENT_OPEN_ID: ${{ secrets.NEXT_PUBLIC_NAVER_CLIENT_OPEN_ID }}
          NEXT_PUBLIC_NAVER_CLIENT_OPEN_SECRET: ${{ secrets.NEXT_PUBLIC_NAVER_CLIENT_OPEN_SECRET }}
          NEXT_PUBLIC_KAKAO_CLIENT_KEY: ${{ secrets.NEXT_PUBLIC_KAKAO_CLIENT_KEY }}
          NEXT_PUBLIC_JS_KAKAO_CLIENT_KEY: ${{ secrets.NEXT_PUBLIC_JS_KAKAO_CLIENT_KEY }}
          NEXT_PUBLIC_REST_KAKAO_CLIENT_KEY: ${{ secrets.NEXT_PUBLIC_REST_KAKAO_CLIENT_KEY }}
          NEXT_PUBLIC_GOOGLE_CLIENT_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          KAKAO_CLIENT_KEY: ${{ secrets.KAKAO_CLIENT_KEY }}
          NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --confirm
